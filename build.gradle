buildscript {
    //apply from: 'https://gist.githubusercontent.com/artzag/ff27d139125dd5650a00b4ee16a97903/raw/72f14b040aef3e753d53984bee1e747dd52160a6/parent.gradle'
    apply from: './parent.gradle'

    repositories {
        jcenter()
    }

}

description = 'Simple Gradle build'



apply plugin: 'net.researchgate.release'

afterReleaseBuild.dependsOn { pushImage }

release {
    failOnCommitNeeded = true
    failOnPublishNeeded = true
    failOnSnapshotDependencies = true
    failOnUnversionedFiles = true
    failOnUpdateNeeded = true
    revertOnFail = true
    preCommitText = ''
    preTagCommitMessage = '[Gradle Release Plugin] - pre tag commit: '
    tagCommitMessage = '[Gradle Release Plugin] - creating tag: '
    newVersionCommitMessage = '[Gradle Release Plugin] - new version commit: '
    tagTemplate = '${version}'
    versionPropertyFile = 'gradle.properties'
    versionProperties = []
    buildTasks = ['buildImage']
    /*
    versionPatterns = [
            /(\d+)([^\d]*$)/: { Matcher <m, Project p -> m.replaceAll("${(m[0][1] as int) + 1}${m[0][2]}") }
    ]
    */
    scmAdapters = [
            net.researchgate.release.GitAdapter

            //,net.researchgate.release.SvnAdapter
            //,net.researchgate.release.HgAdapter
            //,net.researchgate.release.BzrAdapter
    ]

    git {
        requireBranch = 'add_docker'
        pushToRemote = 'origin'
        pushToBranchPrefix = ''
        commitVersionFileOnly = false
        //signTag = false
    }

    /*
    svn {
        username = null
        password = null
        pinExternals = false   // allows to pin the externals when tagging, requires subversion client >= 1.9.0
    }
    */
}

apply plugin: 'com.bmuschko.docker-remote-api'

docker {
    registryCredentials {
        //dependsOn helloPython
        url = 'https://arttest-docker-local.jfrog.io'
        username = project.property('username')
        password = project.property('password')
        email = project.property('email')
    }
}

import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage

File dockerfile = new File(projectDir, 'Dockerfile')


task buildImage(type: DockerBuildImage) {
    inputDir = projectDir
    dockerFile = dockerfile
    tag = "arttest-docker-local.jfrog.io/$artifactid:$version"
}

task pushImage(type: DockerPushImage) {
    dependsOn buildImage
    imageName = buildImage.tag
    tag = "$version"
}


